{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/CartDTO.ts","./src/app/OrderDTO.ts","./src/app/WishListDTO.ts","./src/app/add-address/add-address.component.ts","./src/app/add-address/add-address.component.html","./src/app/add-product/add-product.component.ts","./src/app/add-product/add-product.component.html","./src/app/address-operations/address-operations.component.ts","./src/app/address-operations/address-operations.component.html","./src/app/admin-operations/admin-operations.component.ts","./src/app/admin-operations/admin-operations.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/great-out-door.service.ts","./src/app/my-cart/my-cart.component.ts","./src/app/my-cart/my-cart.component.html","./src/app/my-orders/my-orders.component.ts","./src/app/my-orders/my-orders.component.html","./src/app/product-master-login/product-master-login.component.ts","./src/app/product-master-login/product-master-login.component.html","./src/app/product-master-operations/product-master-operations.component.ts","./src/app/product-master-operations/product-master-operations.component.html","./src/app/register-master/register-master.component.ts","./src/app/register-master/register-master.component.html","./src/app/register-user/register-user.component.ts","./src/app/register-user/register-user.component.html","./src/app/update-product/update-product.component.ts","./src/app/update-product/update-product.component.html","./src/app/update-user/update-user.component.ts","./src/app/update-user/update-user.component.html","./src/app/user-login/user-login.component.ts","./src/app/user-login/user-login.component.html","./src/app/user-operations/user-operations.component.ts","./src/app/user-operations/user-operations.component.html","./src/app/view-all-products/view-all-products.component.ts","./src/app/view-all-products/view-all-products.component.html","./src/app/view-all-users/view-all-users.component.ts","./src/app/view-all-users/view-all-users.component.html","./src/app/viewalladdress/viewalladdress.component.ts","./src/app/viewalladdress/viewalladdress.component.html","./src/app/viewproducts/viewproducts.component.ts","./src/app/viewproducts/viewproducts.component.html","./src/app/wishlist/wishlist.component.ts","./src/app/wishlist/wishlist.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ProductDto } from './ProductDto';\r\n\r\nexport class CartDTO{\r\n    public userId:string;\r\n    public productList:string[];\r\n  \r\n}","export class OrderDTO{\r\n    public orderId:string;\r\n    public userId:string;\r\n    public productsList:string[];\r\n    public productUniqueId:number;\r\n    public addressId:string;\r\n    public orderDispatcherStatus:number;\r\n    public orderInitiateTime:string;\r\n    public orderDispatchTime:string;\r\n\r\n}","export class WishListDTO{\r\n    public userId:string;\r\n    public productIds:string[];\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\n\n@Component({\n  selector: 'app-add-address',\n  templateUrl: './add-address.component.html',\n  styleUrls: ['./add-address.component.css']\n})\nexport class AddAddressComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService,private route:Router) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];    \n       console.log(this.userId);\n           \n       }\n    )\n  }\n  onClickSubmit(data)\n  {\n    data.userId=this.userId;\n    this.service.addAddressById(data).subscribe(\n      (success)=>{\n       \n          alert(\"Address added \");\n        \n       \n      },\n     \n    )\n  }\n  redirectToAddress(){\n    this.route.navigate(['/address/',this.userId]);\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark h-5\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>MASTER OPERATIONS :</marquee> </h2>\n  \n    <!-- <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/addaddress/{{userId}}\" >ADD PRODUCT</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewalladdress/{{userId}}\">VIEW ALL PRODUCTS</a>\n      </li>\n    </ul> -->\n  </nav>\n  \n   \n<div class=\"a overflow-scroll\" >\n    <div class=\"b\">\n       <div class=\"col-md-5\">\n          <div><h4 class=\"text-center p-0\">ADD ADDRESS</h4></div>\n      <form #addAddress=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(addAddress.value)\" >\n          <div>\n                  <label for=\"USER ID\"><strong>USER ID</strong></label>\n                  <input readonlyid=\"userId\" type=\"text\" name=\"userId\" placeholder={{userId}} class=\"form-control\">\n                            \n          </div>\n          <div> \n              <label for=\"BULILDING NO\"><strong>BUILDING NO</strong></label>\n              <input id=\"buildingNo\" type=\"text\" name=\"buildingNo\" placeholder=\"Building Number\" class=\"form-control\" ngModel #buildingNo=\"ngModel\" [ngClass]=\"{'is-invalid':buildingNo.touched && buildingNo.invalid}\" required>\n                      <div *ngIf=\"buildingNo.invalid && ( buildingNo.touched)\">\n                                  <div *ngIf=\"buildingNo.errors.required\" style=\"color: red;\">\n                                          Building Number is required\n                                 </div> \n                 </div>\n          </div>\n          <div>\n            <label for=\"State\" ><strong>State</strong></label>\n            <select name=\"state\" id=\"state\" ngModel #state=\"ngModel\" class=\"form-control\" required>\n                <option value=\"Telangana\">Telangana</option>\n                <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\n                <option value=\"Maharashtra\">Maharashtra</option>\n                <option value=\"TamilNadu\">Tamil Nadu</option>\n                <option value=\"Kerala\">Kerala</option>\n                <option value=\"West Bengal\">West Bengal</option>\n                <option value=\"Bihar\">Bihar</option>\n                <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n                <option value=\"Goa\">Goa</option>\n            </select>\n        </div>\n          <div>\n            <label for=\"City\" ><strong>City</strong></label>\n            <select name=\"city\" id=\"city\" ngModel #city=\"ngModel\" class=\"form-control\" required>\n                <option value=\"Hyderabad\">Hyderabad</option>\n                <option value=\"Chennai\">Chennai</option>\n                <option value=\"Mumbai\">Mumbai</option>\n                <option value=\"Banglore\">Banglore</option>\n                <option value=\"Ahemadabad\">Ahemadabad</option>\n                <option value=\"Jaipur\">Jaipur</option>\n                <option value=\"Kolkata\">Kolkata</option>\n                <option value=\"Trivendrum\">Trivendrum</option>\n            </select>\n        </div>\n             \n          <div>\n                  <label for=\"Field\"><strong>Field</strong></label>\n                  <input id=\"field\" type=\"text\" name=\"field\" placeholder=\"Enter the Field\"\n                  class=\"form-control\" ngModel #field=\"ngModel\" [ngClass]=\"{'is-invalid':field.touched && field.invalid}\" required>\n                      <div *ngIf=\"field.invalid && ( field.touched)\">\n                                  <div *ngIf=\"field.errors.required\" style=\"color: red;\">\n                                      Field is required.\n                                  </div>\n           </div>     \n          </div>\n          <div>\n            <label for=\"PIN\"><strong>PIN</strong></label>\n            <input id=\"zip\" type=\"number\" name=\"zip\" placeholder=\"Enter the Zip\" pattern=\"[1-7]{1}[0-9]{5}\"\n            class=\"form-control\" ngModel #zip=\"ngModel\" [ngClass]=\"{'is-invalid':zip.touched && zip.invalid}\" required>\n                <div *ngIf=\"zip.invalid && ( zip.touched)\">\n                            <div *ngIf=\"zip.errors.required\" style=\"color: red;\">\n                                zip is required.\n                            </div>\n     </div>\n     </div>\n\n      <div class=\"d-flex\">\n              <button type=\"submit\" class=\"btn btn-success my-1 btn-add-address \" [disabled]=\"addAddress.invalid\" >ADD ADDRESS</button>\n              <button type=\"submit\" class=\"btn btn-success button ml-5 my-1 btn-back\"   (click)=redirectToAddress()  >Back</button>\n      </div>\n      \n   </form>\n  </div>\n   </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];    \n       console.log(this.userId);\n           \n       }\n    )\n  }\n  onClickSubmit(product)\n  {\n    this.service.addProduct(this.userId,product).subscribe(\n      (success)=>{\n       \n          alert(\"Product added\");\n        \n       \n      },\n      (error)=>{\n        alert(\"Product is Already Exist\");\n      }\n    )\n  }\n  goBack()\n  {\n    window.history.back();\n  }\n\n}\n","<div>\n    <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n        <h2 class=\"navbar-brand\"> <marquee>ADMIN OPERATIONS :</marquee> </h2>\n        <div class=\"nav-item\"></div>\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/addproduct/{{userId}}\" >ADD PRODUCT</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/viewallproducts/{{userId}}\">VIEW ALL PRODUCTS</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/updateproduct/{{userId}}\">UPDATE PRODUCT</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n              </li>\n        </ul>\n      </nav>\n      \n       \n        <div class=\"a\" >\n            <div class=\"b\">\n               <div class=\"col-md-5\">\n                  <br>\n                  <div><h4>ADD PRODUCT</h4></div>\n              <form #addProduct=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(addProduct.value)\" >\n                  <div>\n                          <label for=\"productId\"><strong>PRODUCT ID</strong></label>\n                          <input id=\"productId\" type=\"text\" name=\"productId\" placeholder=\"Enter The Product Id\"\n                          class=\"form-control\" ngModel #productId=\"ngModel\" required [ngClass]=\"{'is-invalid':productId.touched && productId.invalid}\"pattern=\"[A-Z][a-zA-z0-9]{6,30}\">\n                              <div *ngIf=\"productId.invalid && ( productId.touched)\">\n                                          <div *ngIf=\"productId.errors.required\" style=\"color: red;\">\n                                                  ProductId is required.\n                                          </div>\n                          \n                                          <div *ngIf=\"productId.errors.pattern\">\n                                                 ProductId should start with Captial Letter and<br> Range must be 6 to 30\n                                          </div>\n                              </div>      \n                  </div>\n                  <div> \n                      <label for=\"price\"><strong>Price</strong></label>\n                      <input id=\"price\" type=\"number\" name=\"price\" placeholder=\"Enter The Price\" pattern=\"[1-9]+(\\\\.[0-9][0-9]?)?\"\n                          class=\"form-control\" ngModel #price=\"ngModel\" [ngClass]=\"{'is-invalid':price.touched && price.invalid}\" required>\n                              <div *ngIf=\"price.invalid && ( price.touched)\">\n                                          <div *ngIf=\"price.errors.required\" style=\"color: red;\">\n                                                 Price is required.\n                                         </div> \n                                         <div *ngIf=\"price.errors.pattern\" >\n                                                  Price must contain only digits\n                                                  \n                                         </div>\n                              </div>\n                  </div>\n                  <div>\n                      <label for=\"colour\">Select Colour</label>\n                    <input ejs-colorpicker type=\"color\" id=\"colour\"name=\"colour\" id=\"colour\" ngModel #colour=\"ngModel\"  required />\n                  </div>\n                  <div>\n                          <label for=\"dimension\"><strong>Dimension</strong></label>\n                          <input id=\"dimension\" type=\"text\" name=\"dimension\" placeholder=\"dimension\" \n                          class=\"form-control\" ngModel #dimension=\"ngModel\" [ngClass]=\"{'is-invalid':dimension.touched && dimension.invalid}\" required>\n                              <div *ngIf=\"dimension.invalid && ( dimension.touched)\">\n                                          <div *ngIf=\"dimension.errors.required\" style=\"color: red;\">\n                                              dimensions are required.\n                                          </div>\n                                          \n                              </div>     \n                  </div>\n                  \n              \n                  <div>\n                          <label for=\"specification\"><strong>Specification</strong></label>\n                          <input id=\"specification\" type=\"text\" name=\"specification\" placeholder=\"specification\" \n                              class=\"form-control\" ngModel #specification=\"ngModel\" [ngClass]=\"{'is-invalid':specification.touched && specification.invalid}\" required>\n                              <div *ngIf=\"specification.invalid && (specification.dirty || specification.touched)\">\n                                          <div *ngIf=\"specification.errors.required\" style=\"color: red;\">\n                                              specification is required.\n                                          </div>\n                                          \n                              </div>\n              </div>\n              <div>\n                          <label for=\"manufacture\" ><strong>Manufacture</strong></label>\n                          <input id=\"manufacture\" type=\"text\" name=\"manufacture\" placeholder=\"Enter Manufacturing details\" \n                          class=\"form-control\" ngModel #manufacture=\"ngModel\" [ngClass]=\"{'is-invalid':manufacture.touched && manufacture.invalid}\" required>\n                          <div *ngIf=\"manufacture.invalid && (manufacture.dirty || manufacture.touched)\">\n                            <div *ngIf=\"manufacture.errors.required\" style=\"color: red;\">\n                                Manufacturing details are required.\n                            </div>\n                            \n                          <br>\n                          \n                 </div>\n              </div>\n              <div>\n                <label for=\"quantity\" ><strong>Quantity</strong></label>\n                <input id=\"quantity\" type=\"number\" name=\"quantity\" placeholder=\"Enter quantity\" \n                class=\"form-control\" ngModel #quantity=\"ngModel\" [ngClass]=\"{'is-invalid':quantity.touched && quantity.invalid}\" required>\n                <div *ngIf=\"quantity.invalid && (quantity.dirty || quantity.touched)\">\n                  <div *ngIf=\"quantity.errors.required\" style=\"color: red;\">\n                      quantity is required.\n                  </div>\n                  \n                <br>\n                \n             </div>\n    </div>\n    <div>\n        <label for=\"productCategory\" ><strong>Category</strong></label>\n        <select name=\"productCategory\" id=\"productCategory\" ngModel #productCategory=\"ngModel\" class=\"form-control\" required>\n            <option value=\"Golfing Equipment\">Golfing</option>\n            <option value=\"Mountaneering Equipment\">Mountaineering</option>\n            <option value=\"Camping Equipment\">Camping</option>\n            <option value=\"Outdoor Equipment\">Outdoor</option>\n            <option value=\"Personal Equipment\">Personal</option>\n        </select>\n    </div>\n          \n        <br>\n        \n        <div>\n            <label for=\"productName\"><strong>Product Name</strong></label>\n            <input id=\"productName\" type=\"text\" name=\"productName\" placeholder=\"Enter Product Name\" \n                class=\"form-control\" ngModel #productName=\"ngModel\" [ngClass]=\"{'is-invalid':productName.touched && productName.invalid}\" required>\n                <div *ngIf=\"specification.invalid && (specification.dirty || specification.touched)\">\n                            <div *ngIf=\"productName.errors.required\" style=\"color: red;\">\n                                ProductName is required.\n                            </div>\n                            \n                </div>\n</div>\n              <div>\n                      <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addProduct.invalid\" >Register</button>\n              </div>\n              \n           </form>\n          </div>\n           </div>\n<div class=\"shift\">\n \n  <button class=\"btn btn-outline-primary\" (click)=\"goBack()\">BACK</button>\n\n</div>\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-address-operations',\n  templateUrl: './address-operations.component.html',\n  styleUrls: ['./address-operations.component.css']\n})\nexport class AddressOperationsComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       }\n    )\n  }\n  redirectToAddress(){\n    \n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>ADDRESS OPERATIONS FOR ADDRESSID {{userId}} :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/addaddress/{{userId}}\" >ADD ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewalladdress/{{userId}}\">VIEW ALL YOUR REGISTERED ADDRESSES</a>\n      </li>\n     \n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n    </ul>\n  </nav>\n  <div>\n    <button type=\"button\"class=\"btn-success btn-back ml-5\" (click)=redirectToAddress()>BACK</button>\n  </div>\n   ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-operations',\n  templateUrl: './admin-operations.component.html',\n  styleUrls: ['./admin-operations.component.css']\n})\nexport class AdminOperationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>MASTER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/registerproductmaster\" >REGISTER PRODUCT MASTER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewallusers\">VIEW ALL USERS</a>\n      </li>\n      <li class=\"nav-item active\" >\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n     </ul>\n  </nav>\n  \n   \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ViewAllProductsComponent } from './view-all-products/view-all-products.component';\nimport { ProductMasterLoginComponent } from './product-master-login/product-master-login.component';\nimport { AppComponent } from './app.component';\nimport { ProductMasterOperationsComponent } from './product-master-operations/product-master-operations.component';\nimport { UpdateProductComponent } from './update-product/update-product.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { User } from './User';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserOperationsComponent } from './user-operations/user-operations.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { AdminOperationsComponent } from './admin-operations/admin-operations.component';\nimport { RegisterMasterComponent } from './register-master/register-master.component';\nimport { ViewAllUsersComponent } from './view-all-users/view-all-users.component';\nimport { AddressOperationsComponent } from './address-operations/address-operations.component';\nimport { AddAddressComponent } from './add-address/add-address.component';\nimport { ViewalladdressComponent } from './viewalladdress/viewalladdress.component';\nimport { ViewproductsComponent } from './viewproducts/viewproducts.component';\nimport { MyCartComponent } from './my-cart/my-cart.component';\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\n\nconst routes: Routes = \n[\n        {path:\"main\",component:AppComponent},\n        {path:\"productmasterlogin\",component:ProductMasterLoginComponent},\n        {path:\"addproduct/:userId\",component:AddProductComponent},\n        {path:\"viewallproducts/:userId\",component:ViewAllProductsComponent},\n        {path:\"productoperations/:userId\",component:ProductMasterOperationsComponent},\n        {path:\"updateproduct/:productId\",component:UpdateProductComponent},\n        {path:\"registeruser\",component:RegisterUserComponent},\n        {path:\"loginuser\",component:UserLoginComponent},\n        {path:\"useroperations/:userId\",component:UserOperationsComponent},\n        {path:\"updateuser/:userId\",component:UpdateUserComponent},\n        {path:\"admin\",component:AdminOperationsComponent},\n        {path:\"registerproductmaster\",component:RegisterMasterComponent},\n        {path:\"viewallusers\",component:ViewAllUsersComponent},\n        {path:\"address/:userId\",component:AddressOperationsComponent},\n        {path:\"addaddress/:userId\",component:AddAddressComponent},\n        {path:\"viewalladdress/:userId\",component:ViewalladdressComponent},\n        {path:\"viewproducts/:userId\",component:ViewproductsComponent},\n        {path:\"mycart/:userId\",component:MyCartComponent},\n        {path:\"myorders/:userId\",component:MyOrdersComponent},\n        {path:\"wish/:userId\",component:WishlistComponent},\n        {path:'back',redirectTo:\"\"}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Great-Outdoor-Management';\n  value:boolean=true;\n  setStatus()\n  {\n  this.value=false;\n    \n  }\n}\n","<div *ngIf=\"value\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-dark mb-0\">\n    <div class=\"navbar-brand\"><img src=\"/assets/go.png\" class=\"logo-go\" alt=\"\"></div>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\" routerLink=\"/productmasterlogin\" (click)=\"setStatus()\" >\n        <div class=\"col-md-8\">MASTER LOGIN</div>\n        </li>\n        <li class=\"nav-item active\" routerLink=\"/registeruser\" (click)=\"setStatus()\">\n          <div class=\"col-md-8\">REGISTER USER</div>\n          </li>\n          <li class=\"nav-item active\" routerLink=\"/loginuser\" (click)=\"setStatus()\">\n            <div class=\"col-md-8\">USER LOGIN</div>\n            </li>\n        \n        <!-- <li class=\"nav-item active\" routerLink=\"/main\" (click)=\"setStatus()\" >\n          <div class=\"col-md-4\">LOGOUT</div>\n        </li> -->\n    \n      </ul>\n    </nav>\n    <div class=\"row mx-auto marqueething vdc-standard\">\n      <marquee onmouseover=\"this.stop();\" onmouseout=\"this.start();\">\n          \n          <span style=\"color:red;\"> \n              Important Information:- \n              As a precautionary measure, our Customer Care center (040 - 21000000) will be operational with limited staff. We request you to contact listed center for any queries or information.   </span>\n          \n      </marquee>\n  \n      </div>\n  </div>\n  \n  <div class=\"a content\">  \n    <router-outlet></router-outlet>\n  </div>\n\n    <footer>\n      <app-footer></app-footer>\n  </footer>\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ProductMasterLoginComponent } from './product-master-login/product-master-login.component';\nimport {FormsModule} from '@angular/forms';\nimport { FooterComponent } from './footer/footer.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {  HttpClientModule } from '@angular/common/http';\nimport { ProductMasterOperationsComponent } from './product-master-operations/product-master-operations.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ViewAllProductsComponent } from './view-all-products/view-all-products.component';\nimport { UpdateProductComponent } from './update-product/update-product.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { UserOperationsComponent } from './user-operations/user-operations.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { AdminOperationsComponent } from './admin-operations/admin-operations.component';\nimport { RegisterMasterComponent } from './register-master/register-master.component';\nimport { ViewAllUsersComponent } from './view-all-users/view-all-users.component';\nimport { AddressOperationsComponent } from './address-operations/address-operations.component';\nimport { AddAddressComponent } from './add-address/add-address.component';\nimport { ViewalladdressComponent } from './viewalladdress/viewalladdress.component';\nimport { MyCartComponent } from './my-cart/my-cart.component';\nimport { ViewproductsComponent } from './viewproducts/viewproducts.component';\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductMasterLoginComponent,\n    FooterComponent,\n    ProductMasterOperationsComponent,\n    AddProductComponent,\n    ViewAllProductsComponent,\n    UpdateProductComponent,\n    RegisterUserComponent,\n    UserLoginComponent,\n    UserOperationsComponent,\n    UpdateUserComponent,\n    AdminOperationsComponent,\n    RegisterMasterComponent,\n    ViewAllUsersComponent,\n    AddressOperationsComponent,\n    AddAddressComponent,\n    ViewalladdressComponent,\n    MyCartComponent,\n    ViewproductsComponent,\n    MyOrdersComponent,\n    WishlistComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  dateTime:Date;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.dateTime=new Date();\n  }\n\n}\n","<div class=\"a\">\n    {{dateTime|date:'short'}}\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {ProductMaster} from './ProductMaster';\nimport {ProductDto} from './ProductDto';\nimport { Observable } from 'rxjs';\nimport { User } from './User';\nimport { Address } from './Address';\nimport { CartDTO } from './CartDTO';\nimport { OrderDTO } from './OrderDTO';\nimport { WishListDTO } from './WishListDTO';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GreatOutDoorService {\n \n\n  constructor(private http:HttpClient) { }\n  rootMaster:string=\"http://localhost:8800/productmaster/\";\n  rootUser:string=\"http://localhost:8800/retailer/\";\n  rootAdmin:string=\"http://localhost:8800/admin/\";\n        \n        public validateUser(userId:string,userPassword:string):Observable<ProductMaster>\n        { \n        console.log(this.http.get<ProductMaster>(this.rootMaster+\"login/\"+userId+\"/\"+userPassword));\n        \n          return this.http.get<ProductMaster>(this.rootMaster+\"login/\"+userId+\"/\"+userPassword);\n        }\n        public addProduct(userId:string,product:ProductDto):Observable<any>\n        { \n        console.log(userId);\n        \n          return this.http.post<any>(this.rootMaster+\"add/\"+userId,product,{responseType:'text'as 'json'});\n        }\n      public getAllProductsByMasterId(userId:string):Observable<Array<ProductDto>>\n      {\n        return this.http.get<Array<ProductDto>>(this.rootMaster+\"get/\"+userId);\n      }\n      public getAllProducts():Observable<Array<ProductDto>>\n      {\n        return this.http.get<Array<ProductDto>>(this.rootUser+\"getall\");\n      }\n      public removeProductByUserId(userId:string,productId):Observable<any>\n      {\n        return this.http.delete<any>(this.rootMaster+\"delete/\"+userId+\"/\"+productId,{responseType:'text'as 'json'});\n      }\n      public updateProduct(product:ProductDto):Observable<ProductDto>\n      {\n        return this.http.put<ProductDto>(this.rootMaster+\"update\",product,{responseType:'text'as 'json'});\n      }\n      public registerUser(user:User):Observable<User>\n        { \n            return this.http.post<User>(this.rootUser + \"adduser\", user);\n        }\n        public validateRetailer(userId:string,userPassword:string):Observable<User>\n        { \n        console.log(this.http.get<User>(this.rootUser+\"login/\"+userId+\"/\"+userPassword));\n        \n          return this.http.get<User>(this.rootUser+\"login/\"+userId+\"/\"+userPassword);\n        }\n        public updateUser(user:User):Observable<User>\n      {\n        return this.http.put<User>(this.rootUser+\"updateuser\",user);\n      }\n      public registerMaster(master:ProductMaster):Observable<ProductMaster>\n        { \n            return this.http.post<ProductMaster>(this.rootAdmin+\"registeraproductmaster\", master);\n        }\n        public getAllUsers():Observable<Array<User>>\n      {\n        return this.http.get<Array<User>>(this.rootAdmin+\"getallusers\");\n      }\n      public deleteUserById(userId:string):Observable<any>\n      {\n        return this.http.delete<any>(this.rootAdmin+\"deleteuser/\"+userId,{responseType:'text'as 'json'});\n      }\n      public addAddressById(address:Address):Observable<any>\n        { \n            return this.http.post<any>(this.rootUser+\"addaddress\",address,{responseType:'json'} );\n        }\n        public getAddressByUserId(userId):Observable<Array<Address>>\n        {\n          return this.http.get<Array<Address>>(this.rootUser+\"getaddress/\"+userId);\n        }\n        public deleteAddressById(addressId:string):Observable<any>\n      {\n       \n        return this.http.delete<any>(this.rootUser+\"deleteaddress/\"+addressId);\n      \n      }\n\n      public addToCart(cartDto:CartDTO):Observable<CartDTO>\n        { console.log(cartDto.userId);\n        \n          console.log(cartDto.productList);\n          \n          return this.http.post<CartDTO>(this.rootUser+\"addcart\",cartDto);\n        }\n        public getProductsInCart(userId:string):Observable<Array<ProductDto>>\n        {\n          return this.http.get<Array<ProductDto>>(this.rootUser+\"getproductsincart/\"+userId);\n        }\n        public removeProductInCart(userId:string,productId:string):Observable<any>\n        {\n          return this.http.delete<any>(this.rootUser+\"removecart/\"+userId+\"/\"+productId,{responseType:'text'as 'json'});\n        }\n        public placeOrder(order:OrderDTO):Observable<OrderDTO>\n        { \n            return this.http.post<OrderDTO>(this.rootUser+\"placeorder\", order);\n        }\n        public getOrdersByUserId(userId):Observable<Array<ProductDto>>\n        {\n          return this.http.get<Array<ProductDto>>(this.rootUser+\"get/\"+userId);\n        }\n        public cancelOrder(userId:string,productId:string):Observable<any>\n        {\n          return this.http.delete<any>(this.rootUser+\"cancel/\"+userId+\"/\"+productId,{responseType:'text'as 'json'});\n        }\n        public addToWishList(wish:WishListDTO):Observable<WishListDTO>\n        { \n            return this.http.post<WishListDTO>(this.rootUser+\"addwish\", wish);\n        }\n        public getProductsInWishList(userId:string):Observable<Array<ProductDto>>\n        {\n          return this.http.get<Array<ProductDto>>(this.rootUser+\"productsinwishlist/\"+userId);\n        }\n        public removeFromWishList(userId:string,productId:string):Observable<any>\n        {\n          return this.http.delete<any>(this.rootUser+\"delete/\"+userId+\"/\"+productId,{responseType:'text'as 'json'});\n        }\n        public getOrderIds(userId):Observable<Array<string>>\n        {\n          return this.http.get<Array<string>>(this.rootUser+\"find/\"+userId);\n        }\n        public getOrderedProducts(orderId:string):Observable<Array<ProductDto>>\n        {\n          return this.http.get<Array<ProductDto>>(this.rootUser+\"findorderbyid/\"+orderId);\n        }\n        public cancelProduct(orderId:string,productId:string):Observable<any>\n        {\n          return this.http.delete<any>(this.rootUser+\"cancelproduct/\"+orderId+\"/\"+productId);\n        }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductDto } from '../ProductDto';\nimport { OrderDTO } from '../OrderDTO';\nimport { Address } from '../Address';\n@Component({\n  selector: 'app-my-cart',\n  templateUrl: './my-cart.component.html',\n  styleUrls: ['./my-cart.component.css']\n})\nexport class MyCartComponent implements OnInit {\nuserId:string;\nproductList:ProductDto[]=[]\norders:string[]=[];\norder:boolean=false;\naddressList:Address[];\norderPlace:OrderDTO=new OrderDTO();\naddressId:string;\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n      }\n    )\n    this.service.getProductsInCart(this.userId).subscribe(\n      (success)=>\n      {\n       this.productList=success;        \n      }\n    )\n    this.service.getAddressByUserId(this.userId).subscribe(\n      (data)=>{\n          this.addressList=data;        \n      }\n    )\n  }\n  onClickSubmit(productId:string)\n  {\n    this.service.removeProductInCart(this.userId,productId).subscribe(\n      (success)=>\n      {\n      alert(\"Product removed from cart\");   \n      this.ngOnInit();    \n      }\n\n    )\n  }\n  onClickOrder(productId)\n  {\n    console.log(productId);\n    this.orders.push(productId);\n    this.order=true;\n    //this.order=!this.order;\n  }\n  onClickAddress(addressId)\n  {\n    this.addressId=addressId;\n  }\n  orderNow()\n  {\n      this.orderPlace.userId=this.userId;\n      this.orderPlace.productsList=this.orders;\n      this.orderPlace.addressId=this.addressId;\n      this.service.placeOrder(this.orderPlace).subscribe(\n      (success)=>\n      {\n      alert(\"Ordered successfully\");   \n      this.ngOnInit();    \n      }\n\n    )\n  }\n\n}\n","\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>MYCART :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateuser/{{userId}}\">UPDATE USER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/address/{{userId}}\">ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewproducts/{{userId}}\">PURCHASE</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/mycart/{{userId}}\">CART</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/myorders/{{userId}}\">ORDERS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/wish/{{userId}}\">WISHLIST</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n    </ul>\n  </nav>\n      \n        <div class=\"col-12  bg-color\">\n        <div class=\"d-flex\">\n        <div class=\"col-6\">\n          <div class=\"col-12 p-0 d-flex font-weight-bold text-align-left mb-3\">\n        \n              <div class=\"col-3 p-0\">ID </div>\n              <div class=\"col-2 p-0\">Product Name</div>\n              <div class=\"col-2 p-0\">Category</div>\n              <div class=\"col-1 p-0\">Price</div>\n              <div class=\"col-4 p-0 ml-5\">Actions</div>\n            </div>\n              \n              \n            \n            <div *ngFor=\"let product of productList\" class=\"col-12 p-0 d-flex mb-1 bg-light-grey\">\n                <div class=\"col-3 p-0\">{{product.productId}}</div>\n                <div class=\"col-2 p-0\">{{product.productName}}</div>\n                <div class=\"col-2 p-0\">{{product.productCategory}}</div>\n                   <div class=\"col-1 p-0\">{{product.price}}</div>\n                   <div class=\"d-flex col-4 ml-4\">\n                     <input type=\"checkbox\" name=\"select\" id=\"select\" class=\"m-2s\" (click)=\"onClickOrder(product.productId)\">\n                     <button type=\"submit\" class=\"btn btn-danger ml-2 h-35\" (click)=\"onClickSubmit(product.productId)\">REMOVE</button>\n                   </div>\n                  </div>\n         \n        </div>\n        <div class=\"col-6\">\n          \n              <div class=\"col-12 d-flex font-weight-bold mb-3\">\n                <div class=\"col-3\">ADDRESS ID</div>\n                <div class=\"col-3\">BUILDING</div>\n                <div class=\"col-3\">CITY</div>\n                <div class=\"col-3\">ACTIONS</div>\n              </div>\n              \n              <div *ngFor=\"let address of addressList\" class=\"col-12 d-flex mb-1 bg-light-grey\">\n                  <div class=\"col-3\">{{address.addressId}}</div>\n                  <div class=\"col-3\">{{address.buildingNo}}</div>\n                  <div class=\"col-3\">{{address.city}}</div>\n                  <div class=\"col-3\"><input type=\"radio\" name=\"address\" id=\"address\" (click)=\"onClickAddress(address.addressId)\"><strong></strong> </div>\n              </div>\n        </div>\n      </div>\n        <div *ngIf=\"order\"> \n          <button type=\"submit\" class=\"btn btn-success\" (click)=\"orderNow()\"><strong>ORDER NOW!!</strong> </button>\n        </div>\n              \n        </div>\n       \n     ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductDto } from '../ProductDto';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit {\nuserId:string;\norderList:Array<string>=[];\nflag:boolean=false;\norderId:string;\nproductList:Array<ProductDto>=[];\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n      }\n    )\n    this.service.getOrderIds(this.userId).subscribe(\n      \n      (success)=>\n      {\n        console.log(this.userId);\n       this.orderList=success;  \n       console.log(this.orderList);\n             \n      }\n    )\n  }\n  onClickSubmit(data)\n  {\n    this.orderId=data;\n    this.service.getOrderedProducts(this.orderId).subscribe(\n      (success)=>\n      {\n      this.productList=success;\n      console.log(this.productList);\n             \n      }\n    )\n    this.flag=true;\n  }\nonClickCancel(productId)\n{\n  this.service.cancelProduct(this.orderId,productId).subscribe(\n    (success)=>\n    {\n    alert('Product order cancelled')\n      this.ngOnInit();     \n    },\n    (error)=>\n    {\n    alert('Product cannot be cancelled')\n        \n    }\n  )\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>USER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateuser/{{userId}}\">UPDATE USER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/address/{{userId}}\">ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewproducts/{{userId}}\">PURCHASE</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/mycart/{{userId}}\">CART</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/myorders/{{userId}}\">ORDERS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/wish/{{userId}}\">WISHLIST</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n\n    </ul>\n  </nav>\n     \n        <div>\n        <div class=\"row bg-color\">\n        \n        <div class=\"col-md-6\">\n        \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong> </th>\n              <th><strong>Action</strong></th></tr>\n             \n             <tr *ngFor=\"let order of orderList\">\n                 <td>{{order}}</td>\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(order)\"><strong>CANCEL</strong> </button></td>\n                 \n               \n             </tr>\n             </tbody>\n             \n         </table>\n        </div>  \n        <div *ngIf=\"flag\"class=\"col-md-6\">\n        \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong>\n             </th><th><strong>Product Name</strong></th><th><strong>Action</strong></th></tr>\n             \n             <tr *ngFor=\"let product of productList\">\n                 <td>{{product.productId}}</td>\n                 <td>{{product.productName}}</td>\n                 <td>{{product.productCategory}}</td>\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickCancel(product.productId)\"><strong>CANCEL</strong> </button></td>\n                 \n               \n             </tr>\n             </tbody>\n             \n         </table>\n        </div>\n    </div>   \n        </div>\n      \n     ","import { Component, OnInit } from '@angular/core';\nimport {GreatOutDoorService} from '../great-out-door.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-product-master-login',\n  templateUrl: './product-master-login.component.html',\n  styleUrls: ['./product-master-login.component.css']\n})\nexport class ProductMasterLoginComponent implements OnInit {\n\n  constructor(private router:Router,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n  }\n  onClickSubmit(data)\n  {\n    this.service.validateUser(data.userId,data.userPassword).subscribe(\n      (success)=>{\n        alert(success.userName+\" Logined Successfully\");\n        console.log(success);\n        \n        this.router.navigate(['/productoperations/'+success.userId])\n      },\n      (error)=>{\n         alert(\"Invalid UserName or Password\");\n      }\n    )\n  }\ngoBack()\n{\n  this.router.navigate(['/main']);\n}\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" >\n\n    <ul class=\"navbar-nav\">\n\n        <li class=\"nav-item active\">\n            <H4 class=\"ml-300\"><strong>LOGIN</strong></H4>\n        </li>\n    </ul>\n    \n</nav>\n\n\n<div class=\"background product-master\">\n    <div class=\"imgcontainer\">\n      <img src=\"/assets/img_avatar2.png\"  class=\"avatar\">\n     \n    </div>\n \n        <div class=\"col-md-12\">\n    <form #loginUser=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(loginUser.value)\" >\n    <div class=\"container\">\n        <div class=\"col-md-5\">\n            \n      <label for=\"userId\"><b>USER ID</b></label>\n      <input type=\"text\" placeholder=\"Enter UserId\" name=\"userId\" id=\"userId\" ngModel #userId=\"ngModel\" required>\n      <div *ngIf=\"userId.invalid && userId.touched\">\n        <div *ngIf=\"userId.errors.required\" style=\"color: red;\">\n           User id is required.\n        </div>\n        \n</div>\n      <label for=\"userPassword\"><b>PASSWORD</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"userPassword\" id=\"userPassword\"ngModel #userPassword=\"ngModel\" required>\n      <div *ngIf=\"userPassword.invalid && userPassword.touched\">\n        <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n            Password is required.\n        </div>\n        \n</div>\n      <button type=\"submit\"[disabled]=\"loginUser.invalid\">Login</button>\n     \n      </div>\n      \n        \n     \n    </div>\n    <div class=\"col-md-2 pl-4 ml-2\">\n    <button class=\"btn btn-outline-secondary\" routerLink=\"/main\" >BACK</button>\n</div>\n  </form>\n  <br>\n  \n  \n </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-master-operations',\n  templateUrl: './product-master-operations.component.html',\n  styleUrls: ['./product-master-operations.component.css']\n})\nexport class ProductMasterOperationsComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       }\n    )\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>MASTER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/addproduct/{{userId}}\" >ADD PRODUCT</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewallproducts/{{userId}}\">VIEW ALL PRODUCTS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateproduct/{{userId}}\">UPDATE PRODUCT</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/header\">LOGOUT</a>\n      </li>\n    </ul>\n  </nav>\n  ","import { Component, OnInit } from '@angular/core';\nimport { GreatOutDoorService } from '../great-out-door.service';\n\n@Component({\n  selector: 'app-register-master',\n  templateUrl: './register-master.component.html',\n  styleUrls: ['./register-master.component.css']\n})\nexport class RegisterMasterComponent implements OnInit {\n\n  constructor(private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n  }\nonClickSubmit(data)\n{\n  this.service.registerMaster(data).subscribe(\n    (success)=>{\n      console.log(success);\n      alert(success.userId+\" Registered Successfully\");\n      \n    \n    },\n\n  )\n}\n}\n\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" >\n    <div class=\"navbar-brand\"></div>\n    <ul class=\"navbar-nav\">\n\n        <li class=\"nav-item active \">\n            <H4 class=\"ml-350\"><strong>PRODUCT MASTER REGISTRATION</strong></H4>\n        </li>\n    </ul>\n    \n</nav>\n\n\n<div class=\"a register-master\" >\n  <div class=\"b\">\n     <div class=\"col-md-5\">\n        <br>\n        \n    <form #registerUser=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(registerUser.value)\" >\n        <div>\n                <label for=\"userName\"><strong>USER NAME</strong></label>\n                <input id=\"userName\" type=\"text\" name=\"userName\" placeholder=\"User Name\"\n                class=\"form-control\" ngModel #userName=\"ngModel\" required [ngClass]=\"{'is-invalid':userName.touched && userName.invalid}\"pattern=\"[A-Z][a-zA-z0-9]{6,30}\">\n                    <div *ngIf=\"userName.invalid && ( userName.touched)\">\n                                <div *ngIf=\"userName.errors.required\" style=\"color: red;\">\n                                        User Name is required.\n                                </div>\n                \n                                <div *ngIf=\"userName.errors.pattern\">\n                                        UserName should start with Captial Letter and<br> Range must be 6 to 30\n                                </div>\n                    </div>      \n        </div>\n        <div> \n            <label for=\"userPassword\"><strong>Password</strong></label>\n            <input id=\"userPassword\" type=\"password\" name=\"userPassword\" placeholder=\"Password\" pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                class=\"form-control\" ngModel #userPassword=\"ngModel\" [ngClass]=\"{'is-invalid':userPassword.touched && userPassword.invalid}\" required>\n                    <div *ngIf=\"userPassword.invalid && ( userPassword.touched)\">\n                                <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n                                        userPassword is required.\n                               </div> \n                               <div *ngIf=\"userPassword.errors.pattern\" >\n                                        Password must contain one number,one alphabet,<br>one special\n                                        character and size should be 8 to 14 Range\n                                        \n                               </div>\n                    </div>\n        </div>\n        <div>\n                <label for=\"userNumber\"><strong>Contact Number</strong></label>\n                <input id=\"userNumber\" type=\"number\" name=\"userNumber\" placeholder=\"User Number\" pattern=\"[6789][0-9]{9}\"\n                    class=\"form-control\" ngModel #userNumber=\"ngModel\" [ngClass]=\"{'is-invalid':userNumber.touched && userNumber.invalid}\" required>\n                    <div *ngIf=\"userNumber.invalid && ( userNumber.touched)\">\n                                <div *ngIf=\"userNumber.errors.required\" style=\"color: red;\">\n                                    Contact Number is required.\n                                </div>\n                                <div *ngIf=\"userNumber.errors.pattern\">\n                                    Phone number should be 10 digits\n                                </div>\n                    </div>\n        </div>\n        <div>\n                <label for=\"userMail\"><strong>Email Address</strong></label>\n                <input id=\"userMail\" type=\"email\" name=\"userMail\" placeholder=\"Email Address\" pattern=\"[a-zA-z][a-zA-Z0-9._]*[@]gmail.com\"\n                class=\"form-control\" ngModel #userMail=\"ngModel\" [ngClass]=\"{'is-invalid':userMail.touched && userMail.invalid}\" required>\n                    <div *ngIf=\"userMail.invalid && ( userMail.touched)\">\n                                <div *ngIf=\"userMail.errors.required\" style=\"color: red;\">\n                                    Email is required.\n                                </div>\n                                <div *ngIf=\"userMail.errors.pattern\" >\n                                    Email must only end with gmail.com\n                                </div>\n                    </div>     \n        </div>\n\n    <div class=\"d-flex\">\n            <button type=\"submit\" class=\"btn btn-success ml-95\" [disabled]=\"registerUser.invalid\" >Register</button>\n            <button type=\"submit\" class=\"btn btn-success button ml-5\"  routerLink=\"/back\"  >Back</button>\n    </div>\n    \n </form>\n</div>\n </div>\n","import { Component, OnInit } from '@angular/core';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport {User} from '../User';\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor(private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n  }\n  onClickSubmit(user:User)\n{\n  this.service.registerUser(user).subscribe(\n    (success)=>{\n      console.log(success);\n      alert(success.userId+\" Registered Successfully\");\n      \n    \n    },\n    (error)=>{\n       alert(\"Invalid UserName or Password\");\n    }\n  )\n}\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" >\n    <div class=\"navbar-brand\"></div>\n    <ul class=\"navbar-nav\">\n\n        <li class=\"nav-item active \" >\n            <H4 class=\"ml-350\"><strong >RETAILER REGISTRATION</strong></H4>\n        </li>\n    </ul>\n    \n</nav>\n<div class=\"a register-user\" >\n  <div class=\"b\">\n     <div class=\"col-md-5\">\n        <br>\n        \n    <form #registerUser=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(registerUser.value)\" >\n        <div>\n                <label for=\"userName\"><strong>USER NAME</strong></label>\n                <input id=\"userName\" type=\"text\" name=\"userName\" placeholder=\"User Name\"\n                class=\"form-control\" ngModel #userName=\"ngModel\" required [ngClass]=\"{'is-invalid':userName.touched && userName.invalid}\"pattern=\"[A-Z][a-zA-z0-9]{6,30}\">\n                    <div *ngIf=\"userName.invalid && ( userName.touched)\">\n                                <div *ngIf=\"userName.errors.required\" style=\"color: red;\">\n                                        User Name is required.\n                                </div>\n                \n                                <div *ngIf=\"userName.errors.pattern\">\n                                        UserName should start with Captial Letter and<br> Range must be 6 to 30\n                                </div>\n                    </div>      \n        </div>\n        <div> \n            <label for=\"userPassword\"><strong>Password</strong></label>\n            <input id=\"userPassword\" type=\"password\" name=\"userPassword\" placeholder=\"Password\" pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                class=\"form-control\" ngModel #userPassword=\"ngModel\" [ngClass]=\"{'is-invalid':userPassword.touched && userPassword.invalid}\" required>\n                    <div *ngIf=\"userPassword.invalid && ( userPassword.touched)\">\n                                <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n                                        userPassword is required.\n                               </div> \n                               <div *ngIf=\"userPassword.errors.pattern\" >\n                                        Password must contain one number,one alphabet,<br>one special\n                                        character and size should be 8 to 14 Range\n                                        \n                               </div>\n                    </div>\n        </div>\n        <div>\n                <label for=\"userNumber\"><strong>Contact Number</strong></label>\n                <input id=\"userNumber\" type=\"number\" name=\"userNumber\" placeholder=\"User Number\" pattern=\"[6789][0-9]{9}\"\n                    class=\"form-control\" ngModel #userNumber=\"ngModel\" [ngClass]=\"{'is-invalid':userNumber.touched && userNumber.invalid}\" required>\n                    <div *ngIf=\"userNumber.invalid && ( userNumber.touched)\">\n                                <div *ngIf=\"userNumber.errors.required\" style=\"color: red;\">\n                                    Contact Number is required.\n                                </div>\n                                <div *ngIf=\"userNumber.errors.pattern\">\n                                    Phone number should be 10 digits\n                                </div>\n                    </div>\n        </div>\n        <div>\n                <label for=\"userMail\"><strong>Email Address</strong></label>\n                <input id=\"userMail\" type=\"email\" name=\"userMail\" placeholder=\"Email Address\" pattern=\"[a-zA-z][a-zA-Z0-9._]*[@]gmail.com\"\n                class=\"form-control\" ngModel #userMail=\"ngModel\" [ngClass]=\"{'is-invalid':userMail.touched && userMail.invalid}\" required>\n                    <div *ngIf=\"userMail.invalid && ( userMail.touched)\">\n                                <div *ngIf=\"userMail.errors.required\" style=\"color: red;\">\n                                    Email is required.\n                                </div>\n                                <div *ngIf=\"userMail.errors.pattern\" >\n                                    Email must only end with gmail.com\n                                </div>\n                    </div>     \n        </div>\n        <div>\n            <label for=\"userRole\" ><strong>User Role</strong></label>\n            <select name=\"userRole\" id=\"userRole\" ngModel #userRole=\"ngModel\" class=\"form-control\" required>\n                <option value=\"retailer\">Retailer</option>\n                <option value=\"sales representative\">Sales Representative</option>\n               </select>\n        </div>\n    <div class=\"d-flex\">\n            <button type=\"submit\" class=\"btn btn-success button\" [disabled]=\"registerUser.invalid\" >Register</button>\n            <button type=\"submit\" class=\"btn btn-success button ml-8\"  routerLink=\"/main\" >Back</button>\n    </div>\n    \n </form>\n</div>\n </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductDto } from '../ProductDto';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\nproductId:string;\n  constructor(private activatedRoute:ActivatedRoute,private router:Router,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.productId=param['productId'];    \n       console.log(this.productId);  \n       }\n    )\n  }\nonClickSubmit(product:ProductDto)\n{\n  product.productId=this.productId;\n  console.log(product.productId);\n  this.service.updateProduct(product).subscribe(\n    (success)=>{\n     \n        alert(\"Product Updated\");\n      \n     \n    },\n  )\n  }\n}\n","<!--<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <h2 class=\"navbar-brand\"> <marquee>ADMIN OPERATIONS :</marquee> </h2>\n    <div class=\"nav-item\"><img src=\"/assets/shop.png\" alt=\"\"></div>\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/addproduct/{{userId}}\" >ADD PRODUCT</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/viewallproducts/{{userId}}\">VIEW ALL PRODUCTS</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/addtest\">UPDATE PRODUCT</a>\n          </li>\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" routerLink=\"/header\">LOGOUT</a>\n          </li>\n    </ul>\n  </nav>\n  <div class=\"row mx-auto marqueething vdc-standard\">\n    <marquee onmouseover=\"this.stop();\" onmouseout=\"this.start();\">\n        \n        <span style=\"color:red;\"> \n            Important Information:- \n            As a precautionary measure, our Customer Care center (040 - 21000000) will be operational with limited staff. We request you to contact listed center for any queries or information.   </span>\n        \n    </marquee>\n    </div>\n-->\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <h2 class=\"navbar-brand\"> <marquee>Update Product :</marquee> </h2>\n  <div class=\"nav-item\"></div>\n  </nav>\n  \n     \n    <div class=\"a\" >\n      <div class=\"b\">\n         <div class=\"col-md-5\">\n            <br>\n            <div><h4>ADD PRODUCT</h4></div>\n        <form #updateProduct=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(updateProduct.value)\" >\n\n          <div> \n            <label for=\"userPassword\"><strong>Password</strong></label>\n            <input id=\"userPassword\" type=\"password\" name=\"userPassword\" placeholder=\"Password\" pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                class=\"form-control\" ngModel #userPassword=\"ngModel\" [ngClass]=\"{'is-invalid':userPassword.touched && userPassword.invalid}\" required>\n                    <div *ngIf=\"userPassword.invalid && ( userPassword.touched)\">\n                                <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n                                        userPassword is required.\n                               </div> \n                               <div *ngIf=\"userPassword.errors.pattern\" >\n                                        Password must contain one number,one alphabet,<br>one special\n                                        character and size should be 8 to 14 Range\n                                        \n                               </div>\n                    </div>\n        </div>\n            <div>\n                <label for=\"colour\">Select Colour</label>\n              <input ejs-colorpicker type=\"color\" id=\"colour\"name=\"colour\" id=\"colour\" ngModel #colour=\"ngModel\"  required />\n            </div>\n            <div>\n                    <label for=\"dimension\"><strong>Dimension</strong></label>\n                    <input id=\"dimension\" type=\"text\" name=\"dimension\" placeholder=\"dimension\" \n                    class=\"form-control\" ngModel #dimension=\"ngModel\" [ngClass]=\"{'is-invalid':dimension.touched && dimension.invalid}\" required>\n                        <div *ngIf=\"dimension.invalid && ( dimension.touched)\">\n                                    <div *ngIf=\"dimension.errors.required\" style=\"color: red;\">\n                                        dimensions are required.\n                                    </div>\n                                    \n                        </div>     \n            </div>\n            \n        \n          \n       \n        <div>\n          <label for=\"quantity\" ><strong>Quantity</strong></label>\n          <input id=\"quantity\" type=\"number\" name=\"quantity\" placeholder=\"Enter quantity\" \n          class=\"form-control\" ngModel #quantity=\"ngModel\" [ngClass]=\"{'is-invalid':quantity.touched && quantity.invalid}\" required>\n          <div *ngIf=\"quantity.invalid && (quantity.dirty || quantity.touched)\">\n            <div *ngIf=\"quantity.errors.required\" style=\"color: red;\">\n                quantity is required.\n            </div>\n            \n          <br>\n          \n       </div>\n</div>\n\n    \n  <br>\n  \n  \n        <div>\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"updateProduct.invalid\" >Register</button>\n        </div>\n        \n     </form>\n    </div>\n     </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { User } from '../User';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService,private route:Router) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];    \n       console.log(this.userId);  \n       }\n    )\n   \n  }\n  onClickSubmit(user:User)\n  {\n    user.userId=this.userId;\n    this.service.updateUser(user).subscribe(\n      (success)=>{\n      \n          alert(\"User with user Id\"+success.userId+\" Updated\");\n        \n      \n      },\n    )\n    \n  }\n\n\n\n  redirectToAddress(){\n    this.route.navigate(['/useroperations/',this.userId]);\n\n  }\n}\n\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark d-flex\">\n    <h2 class=\"navbar-brand\"> <marquee>Update User Details :</marquee>\n      \n      </h2>\n      <div class=\"nav-link btn-logout\" routerLink=\"/main\">LOGOUT</div>\n    <div class=\"nav-item\"></div>\n    </nav>\n    \n       \n      <div class=\"a overflow-scroll \" >\n        <div class=\"b\">\n           <div class=\"col-md-5\">\n              <br>\n              <div><h4>UPDATE YOUR DETAILS</h4></div>\n          <form #updateUser=\"ngForm\" class=\"form-group\" (ngSubmit)=\"onClickSubmit(updateUser.value)\" >\n            <div> \n                <label for=\"userPassword\"><strong>Password</strong></label>\n                <input id=\"userPassword\" type=\"password\" name=\"userPassword\" placeholder=\"Password\" pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                    class=\"form-control\" ngModel #userPassword=\"ngModel\" [ngClass]=\"{'is-invalid':userPassword.touched && userPassword.invalid}\" required>\n                        <div *ngIf=\"userPassword.invalid && ( userPassword.touched)\">\n                                    <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n                                            userPassword is required.\n                                   </div> \n                                   <div *ngIf=\"userPassword.errors.pattern\" >\n                                            Password must contain one number,one alphabet,<br>one special\n                                            character and size should be 8 to 14 Range\n                                            \n                                   </div>\n                        </div>\n            </div>\n              <div>\n                <label for=\"userNumber\"><strong>Contact Number</strong></label>\n                <input id=\"userNumber\" type=\"number\" name=\"userNumber\" placeholder=\"User Number\" pattern=\"[6789][0-9]{9}\"\n                    class=\"form-control\" ngModel #userNumber=\"ngModel\" [ngClass]=\"{'is-invalid':userNumber.touched && userNumber.invalid}\" required>\n                    <div *ngIf=\"userNumber.invalid && ( userNumber.touched)\">\n                                <div *ngIf=\"userNumber.errors.required\" style=\"color: red;\">\n                                    Contact Number is required.\n                                </div>\n                                <div *ngIf=\"userNumber.errors.pattern\">\n                                    Phone number should be 10 digits\n                                </div>\n                    </div>\n        </div>\n        <div>\n                <label for=\"userMail\"><strong>Email Address</strong></label>\n                <input id=\"userMail\" type=\"email\" name=\"userMail\" placeholder=\"Email Address\" pattern=\"[a-zA-z][a-zA-Z0-9._]*[@]gmail.com\"\n                class=\"form-control\" ngModel #userMail=\"ngModel\" [ngClass]=\"{'is-invalid':userMail.touched && userMail.invalid}\" required>\n                    <div *ngIf=\"userMail.invalid && ( userMail.touched)\">\n                                <div *ngIf=\"userMail.errors.required\" style=\"color: red;\">\n                                    Email is required.\n                                </div>\n                                <div *ngIf=\"userMail.errors.pattern\" >\n                                    Email must only end with gmail.com\n                                </div>\n                    </div>     \n        </div>\n\n  \n      \n    <br>\n    \n    \n          <div class=\"d-flex\">\n                  <button type=\"submit\" class=\"btn btn-success btn-register ml-5\" [disabled]=\"updateUser.invalid\" >Register</button>\n                  <button type=\"button\"class=\"btn-success btn-back ml-5\" (click)=redirectToAddress()>BACK</button>\n          </div>\n          \n       </form>\n      </div>\n       </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor(private router:Router,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n\n  }\nonClickSubmit(data)\n{\n  this.service.validateRetailer(data.userId,data.userPassword).subscribe(\n    (success)=>{\n      alert(success.userName+\" Logined Successfully\");\n      console.log(success.userId);\n      if(success.userRole==\"ADMIN\")\n      {\n        this.router.navigate(['/admin/']);\n      }\n      else{\n        this.router.navigate(['/useroperations/'+success.userId]);\n      }\n            \n    },\n    (error)=>{\n       alert(\"Invalid UserName or Password\");\n\n    }\n  )\n}\ngoBack()\n{\n  this.router.navigate(['/main'])\n}\n\n\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" >\n   \n    <ul class=\"navbar-nav\">\n\n        <li class=\"nav-item active\">\n            <H4 class=\"ml-300\"><strong>LOGIN</strong></H4>\n        </li>\n    </ul>\n    \n</nav> \n\n<div class=\"background user-login\">\n    \n \n        <div class=\"col-md-12\">\n    <form #loginUser=\"ngForm\" class=\"form-group  bg-grey\" (ngSubmit)=\"onClickSubmit(loginUser.value)\" >\n    <div class=\"container\">\n        <div class=\"col-md-5\">\n            \n      <label for=\"userId\"><b>USER ID</b></label>\n      <input type=\"text\" placeholder=\"Enter UserId\" name=\"userId\" id=\"userId\" ngModel #userId=\"ngModel\" required>\n      <div *ngIf=\"userId.invalid && userId.touched\">\n        <div *ngIf=\"userId.errors.required\" style=\"color: red;\">\n           User id is required.\n        </div>\n        \n</div>\n      <label for=\"userPassword\"><b>PASSWORD</b></label>\n      <input type=\"password\" placeholder=\"Enter Password\" name=\"userPassword\" id=\"userPassword\"ngModel #userPassword=\"ngModel\" required>\n      <div *ngIf=\"userPassword.invalid && userPassword.touched\">\n        <div *ngIf=\"userPassword.errors.required\" style=\"color: red;\">\n            Password is required.\n        </div>\n        \n</div>\n      <button type=\"submit\"[disabled]=\"loginUser.invalid\">Login</button>\n     \n      </div>\n      \n        \n     \n    </div>\n    <div class=\"col-md-2 pl-4 ml-2\">\n    <button class=\"btn btn-outline-secondary\" (click)=\"goBack()\">BACK</button>\n</div>\n  </form>\n  <br>\n  \n  \n </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-operations',\n  templateUrl: './user-operations.component.html',\n  styleUrls: ['./user-operations.component.css']\n})\nexport class UserOperationsComponent implements OnInit {\nuserId:string;\n  constructor(private activatedRoute:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       }\n     )\n    }\n    \n  }\n\n\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee> USER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateuser/{{userId}}\">UPDATE USER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/address/{{userId}}\">ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewproducts/{{userId}}\">VIEW ALL PRODUCTS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/mycart/{{userId}}\">CART</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/myorders/{{userId}}\">ORDER PRODUCT</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/wish/{{userId}}\">WISHLIST</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n\n    </ul>\n  </nav>\n \n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductDto } from '../ProductDto';\n\n@Component({\n  selector: 'app-view-all-products',\n  templateUrl: './view-all-products.component.html',\n  styleUrls: ['./view-all-products.component.css']\n})\nexport class ViewAllProductsComponent implements OnInit {\nuserId:string;\nproductList:ProductDto[]=[];\n  constructor(private activatedRoute:ActivatedRoute,private router:Router,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];    \n       console.log(this.userId);\n       this.service.getAllProductsByMasterId(this.userId).subscribe(\n        (data)=>{\n            this.productList=data;        \n        }\n      )\n           \n       }\n    )\n  }\n  onClickSubmit(productId)\n  {\n \n    if(confirm(\"Are you Sure\"))\n             this.service.removeProductByUserId(this.userId,productId).subscribe(\n              (success)=>{\n                alert(productId+ \" is deleted\")\n                this.ngOnInit();\n              }     \n             )\n\n}\nonClickUpdate(productId)\n{\n  console.log(productId);\n  \n  this.router.navigate(['/updateproduct/'+productId]);\n}\n}\n","<div>\n    <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\" >\n        <h2 class=\"navbar-brand\"> <marquee>ADMIN OPERATIONS :</marquee> </h2>\n        <div class=\"nav-item\"></div>\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/addproduct/{{userId}}\" >ADD PRODUCT</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/viewallproducts/{{userId}}\" id=\"view\">VIEW ALL PRODUCTS</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/updateproduct/{{userId}}\">UPDATE PRODUCT</a>\n              </li>\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" routerLink=\"/header\">LOGOUT</a>\n              </li>\n        </ul>\n      </nav>\n\n        <div class=\"row bg-color\"  >\n        <div class=\"col-md-8\">\n        \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong> </th><th><strong>Center Name</strong></th><th><strong>Action</strong></th></tr>\n             \n             <tr *ngFor=\"let product of productList\">\n                 <td>{{product.productId}}</td>\n                 <td>{{product.productName}}</td>\n                 <td>{{product.productCategory}}</td>\n                <td>{{product.price}}</td>\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(product.productId)\"><strong>DELETE</strong> </button></td>\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickUpdate(product.productId)\"><strong>UPDATE</strong> </button></td>\n             </tr>\n             </tbody>\n      \n         </table>\n         </div>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { User } from '../User';\n\n@Component({\n  selector: 'app-view-all-users',\n  templateUrl: './view-all-users.component.html',\n  styleUrls: ['./view-all-users.component.css']\n})\nexport class ViewAllUsersComponent implements OnInit {\nuserList:User[]=[];\n  constructor(private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n      this.service.getAllUsers().subscribe(\n      (success)=>{\n        this.userList=success;\n        \n      }     \n     )\n\n  }\n  onClickSubmit(data)\n  {\n    this.service.deleteUserById(data).subscribe(\n      (success)=>{\n      alert(data+' deleted successfully');\n        this.ngOnInit();\n      }     \n     )\n  }\n\n}\n","<div class=\"row bg-color\">\n    <div class=\"col-md-12\">\n    \n        <table class=\"table table-hover\">\n       <tbody>\n         <tr><th><strong>ID</strong> </th>\n            <th><strong>Name</strong></th>\n            <th><strong>Contact No</strong></th>\n            <th><strong>Mail ID</strong></th>\n            <th><strong>Action</strong></th></tr>\n         \n         <tr *ngFor=\"let user of userList\">\n             <td>{{user.userId}}</td>\n             <td>{{user.userName}}</td>\n             <td>{{user.userNumber}}</td>\n            <td>{{user.userMail}}</td>\n             <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(user.userId)\"><strong>DELETE</strong> </button></td>\n         </tr>\n         </tbody>\n  \n     </table>\n     </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, RouteReuseStrategy, Router } from '@angular/router';\nimport { Address } from '../Address';\nimport { GreatOutDoorService } from '../great-out-door.service';\n\n@Component({\n  selector: 'app-viewalladdress',\n  templateUrl: './viewalladdress.component.html',\n  styleUrls: ['./viewalladdress.component.css']\n})\nexport class ViewalladdressComponent implements OnInit {\nuserId:string;\naddressList:Address[]=[];\n  constructor(private service:GreatOutDoorService ,private activatedRoute:ActivatedRoute,private route:Router) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       this.service.getAddressByUserId(this.userId).subscribe(\n        (data)=>{\n            this.addressList=data;        \n        }\n      )\n           \n       }\n    )\n      \n}\nonClickSubmit(data)\n{\n  this.service.deleteAddressById(data).subscribe(\n    (success)=>{\n       alert('deleted');\n       this.ngOnInit();      \n     }\n   )\n       \n   \n}\nredirectToAddress(){\n  this.route.navigate(['/address/',this.userId]);\n}\n}","<div>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-dark\" >\n        <div class=\"navbar-brand\"></div>\n        <ul class=\"navbar-nav\">\n    \n            <li class=\"nav-item active ml-465\">\n                <H4><strong>YOUR ADDRESSES AT A GLANCE!!</strong></H4>\n            </li>\n            \n        </ul>\n        \n    </nav>\n      \n        <div class=\"a\">\n        <div class=\"row bg-color\">\n        <div class=\"col-md-8\">\n      <h3><strong>ADDRESS LIST OF USERID {{userId}} </strong> </h3>  \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong> </th><th><strong>BUILDING NO</strong></th><th><strong>CITY</strong></th><th><strong>STATE</strong></th><th><strong>ACTION</strong></th></tr>\n             \n             <tr *ngFor=\"let address of addressList\">\n                 <td>{{address.addressId}}</td>\n                 <td>{{address.buildingNo}}</td>\n                 <td>{{address.city}}</td>\n                <td>{{address.state}}</td>\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(address.addressId)\"><strong>DELETE</strong> </button></td>\n                 \n             </tr>\n             </tbody>\n\n             <button type=\"button\"class=\"btn-success ml-400\" (click)=redirectToAddress()>BACK</button>\n         </table>\n         \n        </div>\n       \n         </div>\n         \n        </div>\n       ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductMasterLoginComponent } from '../product-master-login/product-master-login.component';\nimport { ProductDto } from '../ProductDto';\nimport { CartDTO } from '../CartDTO';\nimport { WishListDTO } from '../WishListDTO';\nimport { ENGINE_METHOD_STORE } from 'constants';\n\n\n@Component({\n  selector: 'app-viewproducts',\n  templateUrl: './viewproducts.component.html',\n  styleUrls: ['./viewproducts.component.css']\n})\nexport class ViewproductsComponent implements OnInit {\nuserId:string;\nproductList:ProductDto[]=[];\ncartDto:CartDTO=new CartDTO();\nlist:string[]=[];\nquantity:number;\nwishList:WishListDTO=new WishListDTO();\nwishListArray:string[]=[];\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService,private route:Router) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       }\n     )\n     this.service.getAllProducts().subscribe(\n      (success)=>{\n       this.productList=success;\n      },\n    )\n  }\nonClickSubmit(productId:string)\n  {\n    var flag1:boolean=false;\n\n    for(var i=0;i<this.list.length;i++)\n    {\n      if(this.list[i]==productId)\n      {\n        flag1=true;\n        break;\n      }\n    }\n    console.log(this.list);\n\n    if(flag1==true)\n    {\n      alert('product already added to cart');\n     \n    }\n    else{\n      this.list=[];\n      this.list.push(productId);\n      this.cartDto.userId=this.userId;\n      this.cartDto.productList=this.list;\n      this.service.addToCart(this.cartDto).subscribe(\n        (success)=>{\n         alert('added to cart')\n        },\n        (error)=>{\n           alert(\"Product already exists in your cart\");\n        }\n      )\n    }\n  \n  }\n  onClickSubmitWish(productId)\n  {\n    var flag:boolean=false;\n\n    for(var i=0;i<this.wishListArray.length;i++)\n    {\n      if(this.wishListArray[i]==productId)\n      {\n        flag=true;\n        break;\n      }\n    }\n    console.log(this.wishListArray);\n\n    if(flag==true)\n    {\n      alert('product already added to wish list');\n    }\n    else{\n      this.wishListArray=[];\n      this.wishListArray.push(productId);\n      this.wishList.userId=this.userId;\n      this.wishList.productIds=this.wishListArray;\n      this.service.addToWishList(this.wishList).subscribe(\n        (success)=>{\n         alert('added to wishlist')\n\n        },\n      (error)=>{\n         alert(\"product already added to wish list\");\n      }\n      )\n    }\n  \n  }\n\n  redirectToAddress(){\n    this.route.navigate(['/useroperations/',this.userId]);\n  }\n  \n}\n","<head>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n</head>\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark mb-0\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>USER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateuser/{{userId}}\">UPDATE USER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/address/{{userId}}\">ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewproducts/{{userId}}\">PURCHASE</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/mycart/{{userId}}\">CART</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/myorders/{{userId}}\">ORDER PRODUCT</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/wish/{{userId}}\">WISHLIST</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n\n    </ul>\n  </nav>\n      \n        <div class=\"row bg-color\">\n        <div class=\"col-md-8\">\n        \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong> </th><th><strong>Product Name</strong></th><th><strong>Category</strong></th><th><strong>Price</strong></th></tr>\n             \n             <tr *ngFor=\"let product of productList\">\n                 <td>{{product.productId}}</td>\n                 <td>{{product.productName}}</td>\n                 <td>{{product.productCategory}}</td>\n                 <td>{{product.price}}</td>\n\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(product.productId)\"><strong>ADD TO CART</strong> </button></td>\n               <td><p>\n                <a (click)=\"onClickSubmitWish(product.productId)\">\n                  <span class=\"glyphicon glyphicon-heart\"></span>\n                </a>\n              </p></td>\n             </tr>\n             </tbody>\n             <button type=\"button\"class=\"btn-success ml-400\" (click)=redirectToAddress()>BACK</button>\n         </table>\n         </div>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GreatOutDoorService } from '../great-out-door.service';\nimport { ProductDto } from '../ProductDto';\n\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.css']\n})\nexport class WishlistComponent implements OnInit {\nuserId:string;\nproductList:ProductDto[]=[];\nW\n  constructor(private activatedRoute:ActivatedRoute,private service:GreatOutDoorService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (param)=>\n      {\n       this.userId=param['userId'];        \n       }\n     )\n     this.service.getProductsInWishList(this.userId).subscribe(\n      (success)=>{\n       this.productList=success;\n      },\n\n    )\n    \n  }\n  onClickSubmit(productId)\n  {\n    this.service.removeFromWishList(this.userId,productId).subscribe(\n      (success)=>{\n       alert('Removed from wishlist');\n       this.ngOnInit();\n      },\n\n    )\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"nav-item\"></div>\n    <h2 class=\"navbar-brand\"> <marquee>USER OPERATIONS :</marquee> </h2>\n  \n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/updateuser/{{userId}}\">UPDATE USER</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/address/{{userId}}\">ADDRESS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/viewproducts/{{userId}}\">PURCHASE</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/mycart/{{userId}}\">CART</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/myorders/{{userId}}\">ORDERS</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/wish/{{userId}}\">WISHLIST</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/main\">LOGOUT</a>\n      </li>\n\n    </ul>\n  </nav>\n      \n        <div class=\"a bg-color\">\n        <div class=\"row\">\n        <div class=\"col-md-8\">\n        \n            <table class=\"table table-hover\">\n           <tbody>\n             <tr><th><strong>ID</strong> \n            </th><th><strong>Product Name</strong>\n            </th><th><strong>Category</strong>\n            </th><th><strong>Price</strong>\n            </th><th><strong>Action</strong></th></tr>\n             \n             <tr *ngFor=\"let product of productList\">\n                 <td>{{product.productId}}</td>\n                 <td>{{product.productName}}</td>\n                 <td>{{product.productCategory}}</td>\n                 <td>{{product.price}}</td>\n\n                 <td><button type=\"submit\" class=\"btn btn-danger\" (click)=\"onClickSubmit(product.productId)\"><strong>DELETE FROM WISHLIST</strong> </button></td>\n             </tr>\n             </tbody>\n      \n         </table>\n        </div>\n         </div>\n        </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}